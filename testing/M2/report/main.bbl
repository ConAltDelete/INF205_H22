% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.1 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{nty/global//global/global}
    \entry{darel_rex_finley_determining_2007}{online}{}
      \name{author}{1}{}{%
        {{hash=b765563b423a4410b80da5f124a0bc25}{%
           family={Finley},
           familyi={F\bibinitperiod},
           given={Darel\bibnamedelima Rex},
           giveni={D\bibinitperiod\bibinitdelim R\bibinitperiod}}}%
      }
      \strng{namehash}{b765563b423a4410b80da5f124a0bc25}
      \strng{fullhash}{b765563b423a4410b80da5f124a0bc25}
      \strng{bibnamehash}{b765563b423a4410b80da5f124a0bc25}
      \strng{authorbibnamehash}{b765563b423a4410b80da5f124a0bc25}
      \strng{authornamehash}{b765563b423a4410b80da5f124a0bc25}
      \strng{authorfullhash}{b765563b423a4410b80da5f124a0bc25}
      \field{sortinit}{F}
      \field{sortinithash}{2638baaa20439f1b5a8f80c6c08a13b4}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{title}{Determining Whether A Point Is Inside A Complex Polygon}
      \field{titleaddon}{Point-In-Polygon Algorithm — Determining Whether A Point Is Inside A Complex Polygon}
      \field{urlday}{31}
      \field{urlmonth}{10}
      \field{urlyear}{2021}
      \field{year}{2007}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \verb{file}
      \verb Determining Whether A Point Is Inside A Complex Polygon:C\:\\Users\\matsh\\Zotero\\storage\\UMJSEDAS\\polygon.html:text/html
      \endverb
      \verb{urlraw}
      \verb http://alienryderflex.com/polygon/
      \endverb
      \verb{url}
      \verb http://alienryderflex.com/polygon/
      \endverb
    \endentry
    \entry{ghuneim_contour_2000}{online}{}
      \name{author}{1}{}{%
        {{hash=94859e9d8559d3c4b01bc3c3366d4584}{%
           family={Ghuneim},
           familyi={G\bibinitperiod},
           given={Abeer\bibnamedelima George},
           giveni={A\bibinitperiod\bibinitdelim G\bibinitperiod}}}%
      }
      \strng{namehash}{94859e9d8559d3c4b01bc3c3366d4584}
      \strng{fullhash}{94859e9d8559d3c4b01bc3c3366d4584}
      \strng{bibnamehash}{94859e9d8559d3c4b01bc3c3366d4584}
      \strng{authorbibnamehash}{94859e9d8559d3c4b01bc3c3366d4584}
      \strng{authornamehash}{94859e9d8559d3c4b01bc3c3366d4584}
      \strng{authorfullhash}{94859e9d8559d3c4b01bc3c3366d4584}
      \field{sortinit}{G}
      \field{sortinithash}{32d67eca0634bf53703493fb1090a2e8}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Also known as border following or boundary following; contour tracing is a technique that is applied to digital images in order to extract their boundary. As a result, an important question arises: What is the "boundary" of a given digital image? In order to answer that question, we first have to define a digital image. A digital image is a group of pixels on a square tessellation each having a certain value. Throughout this web site, we will be dealing with bilevel images i.e. each pixel can have one of 2 possible values namely: 1, in which case we'll consider it a "black" pixel and it will be part of the pattern, {OR} 0, in which case we'll consider it a "white" pixel and it will be part of the background. Now we come to our original question: What is the "boundary" of a given pattern? The boundary of a given pattern P, is the set of border pixels of P. Since we are using a square tessellation, there are 2 kinds of boundary (or border) pixels: 4-border pixels and 8-border pixels. A black pixel is considered a 4-border pixel if it shares an edge with at least one white pixel. On the other hand, a black pixel is considered an 8-border pixel if it shares an edge or a vertex with at least one white pixel. (A 4-border pixel is also an 8-border pixel. An 8-border pixel may or may not be a 4-border pixel.) A point worth mentioning is that it is not enough to merely identify the boundary pixels of a pattern in order to extract its contour. What we need is an ordered sequence of the boundary pixels from which we can extract the general shape of the pattern.}
      \field{title}{Contour Tracing}
      \field{titleaddon}{Contour Tracing}
      \field{urlday}{31}
      \field{urlmonth}{10}
      \field{urlyear}{2021}
      \field{year}{2000}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \verb{file}
      \verb Contour Tracing:C\:\\Users\\matsh\\Zotero\\storage\\XUV6WT74\\moore.html:text/html
      \endverb
      \verb{urlraw}
      \verb http://www.imageprocessingplace.com/downloads_V3/root_downloads/tutorials/contour_tracing_Abeer_George_Ghuneim/moore.html
      \endverb
      \verb{url}
      \verb http://www.imageprocessingplace.com/downloads_V3/root_downloads/tutorials/contour_tracing_Abeer_George_Ghuneim/moore.html
      \endverb
    \endentry
    \entry{shin_efficient_2008}{inproceedings}{}
      \name{author}{5}{}{%
        {{hash=242e85224002b6eee48f337d4b4a4ae6}{%
           family={Shin},
           familyi={S\bibinitperiod},
           given={Paul\bibnamedelima J.},
           giveni={P\bibinitperiod\bibinitdelim J\bibinitperiod}}}%
        {{hash=d7083eeeb9043d1e2310798d019a520e}{%
           family={Gao},
           familyi={G\bibinitperiod},
           given={Xinting},
           giveni={X\bibinitperiod}}}%
        {{hash=c1dd34cefad9af32095a9290d285f133}{%
           family={Kleihorst},
           familyi={K\bibinitperiod},
           given={Richard},
           giveni={R\bibinitperiod}}}%
        {{hash=ac8b296419cf101b40dd497ae6f5c314}{%
           family={Park},
           familyi={P\bibinitperiod},
           given={Johnny},
           giveni={J\bibinitperiod}}}%
        {{hash=79d20b9313c4fe34a6618496ed4afd96}{%
           family={Kak},
           familyi={K\bibinitperiod},
           given={Avinash\bibnamedelima C.},
           giveni={A\bibinitperiod\bibinitdelim C\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {Palo Alto, {CA}, {USA}}%
      }
      \list{publisher}{1}{%
        {IEEE}%
      }
      \strng{namehash}{f5667536b99e46f50795d1674be52159}
      \strng{fullhash}{c2e37c7bce07ced232d89b044f60e43b}
      \strng{bibnamehash}{f5667536b99e46f50795d1674be52159}
      \strng{authorbibnamehash}{f5667536b99e46f50795d1674be52159}
      \strng{authornamehash}{f5667536b99e46f50795d1674be52159}
      \strng{authorfullhash}{c2e37c7bce07ced232d89b044f60e43b}
      \field{sortinit}{S}
      \field{sortinithash}{b164b07b29984b41daf1e85279fbc5ab}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{{SIMD} (Single Instruction Multiple Data) processors have been shown to possess high capability for vector-based image processing due to their massively parallel architecture. However, it is not always easy to map the general-purpose processor implementations of high-level vision algorithms to such processors due to the hardware-imposed characteristics of {SIMD} processors. In this paper, our focus is on contour extraction algorithms for such processors. We present a novel real-time memory-efﬁcient contour extraction algorithm that is suitable for the {SIMD} processor used in the {WiCa} camera developed by {NXP}. A further goal of this paper is to present a method for extracting the curvature scale space ({CSS}) on the same {SIMD} processor. For contour extraction, the detected contour points are ﬁrst stored as they are detected, and then effectively reordered with low memory overhead. For extracting the {CSS}, we introduce a high-precision Gaussian ﬁltering scheme using an extended number representation that is particularly suited for the {SIMD} processor of the camera. We demonstrate both in real time.}
      \field{booktitle}{2008 Second {ACM}/{IEEE} International Conference on Distributed Smart Cameras}
      \field{eventtitle}{2008 Second {ACM}/{IEEE} International Conference on Distributed Smart Cameras ({ICDSC})}
      \field{isbn}{978-1-4244-2664-5}
      \field{langid}{english}
      \field{month}{9}
      \field{title}{An efficient algorithm for the extraction of contours and curvature scale space on {SIMD}-powered Smart Cameras}
      \field{urlday}{1}
      \field{urlmonth}{11}
      \field{urlyear}{2021}
      \field{year}{2008}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \field{pages}{1\bibrangedash 10}
      \range{pages}{10}
      \verb{doi}
      \verb 10.1109/ICDSC.2008.4635714
      \endverb
      \verb{file}
      \verb Shin et al. - 2008 - An efficient algorithm for the extraction of conto.pdf:C\:\\Users\\matsh\\Zotero\\storage\\LICXX9HD\\Shin et al. - 2008 - An efficient algorithm for the extraction of conto.pdf:application/pdf
      \endverb
      \verb{urlraw}
      \verb http://ieeexplore.ieee.org/document/4635714/
      \endverb
      \verb{url}
      \verb http://ieeexplore.ieee.org/document/4635714/
      \endverb
    \endentry
    \entry{noauthor_watershed_2012}{online}{}
      \field{sortinit}{w}
      \field{sortinithash}{4315d78024d0cea9b57a0c6f0e35ed0d}
      \field{labeltitlesource}{title}
      \field{title}{watershed algorithm : definition of watershed algorithm and synonyms of watershed algorithm (English)}
      \field{urlday}{31}
      \field{urlmonth}{10}
      \field{urlyear}{2021}
      \field{year}{2012}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \verb{file}
      \verb watershed algorithm \: definition of watershed algorithm and synonyms of watershed algorithm (English):C\:\\Users\\matsh\\Zotero\\storage\\XJBBJ2Y8\\en-en.html:text/html
      \endverb
      \verb{urlraw}
      \verb http://dictionary.sensagent.com/watershed%20algorithm/en-en/
      \endverb
      \verb{url}
      \verb http://dictionary.sensagent.com/watershed%20algorithm/en-en/
      \endverb
    \endentry
    \entry{wilhelm_burger_digital_nodate}{book}{}
      \name{author}{2}{}{%
        {{hash=1e01706a0c83b7ab567d3b01707d3205}{%
           family={{Wilhelm Burger}},
           familyi={W\bibinitperiod}}}%
        {{hash=752608fad9e495ac8e5ca9e7ab7125ea}{%
           family={{Mark J. Burge}},
           familyi={M\bibinitperiod}}}%
      }
      \list{location}{1}{%
        {London}%
      }
      \list{publisher}{1}{%
        {Springer, London}%
      }
      \strng{namehash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \strng{fullhash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \strng{bibnamehash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \strng{authorbibnamehash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \strng{authornamehash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \strng{authorfullhash}{b082aa8d6c22dcba47f6bbda8bcd2412}
      \field{sortinit}{W}
      \field{sortinithash}{4315d78024d0cea9b57a0c6f0e35ed0d}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This modern, self-contained textbook provides an accessible introduction to the field from the perspective of a practicing programmer, supporting a detailed presentation of the fundamental concepts and techniques with practical exercises and fully worked out implementation examples. This much-anticipated new edition of the definitive textbook on Digital Image Processing has been completely revised and expanded with new content and improved teaching material.}
      \field{edition}{2}
      \field{isbn}{978-1-4471-6684-9}
      \field{pagetotal}{811}
      \field{series}{Texts in Computer Science}
      \field{title}{Digital Image Processing}
    \endentry
  \enddatalist
\endrefsection
\endinput

