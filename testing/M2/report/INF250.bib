
@online{darel_rex_finley_determining_2007,
	title = {Determining Whether A Point Is Inside A Complex Polygon},
	url = {http://alienryderflex.com/polygon/},
	titleaddon = {Point-In-Polygon Algorithm — Determining Whether A Point Is Inside A Complex Polygon},
	author = {Darel Rex Finley},
	urldate = {2021-10-31},
	date = {2007},
	file = {Determining Whether A Point Is Inside A Complex Polygon:C\:\\Users\\matsh\\Zotero\\storage\\UMJSEDAS\\polygon.html:text/html}
}

@online{noauthor_watershed_2012,
	title = {watershed algorithm : definition of watershed algorithm and synonyms of watershed algorithm (English)},
	url = {http://dictionary.sensagent.com/watershed%20algorithm/en-en/},
	urldate = {2021-10-31},
	date = {2012},
	file = {watershed algorithm \: definition of watershed algorithm and synonyms of watershed algorithm (English):C\:\\Users\\matsh\\Zotero\\storage\\XJBBJ2Y8\\en-en.html:text/html}
}

@online{ghuneim_contour_2000,
	title = {Contour Tracing},
	url = {http://www.imageprocessingplace.com/downloads_V3/root_downloads/tutorials/contour_tracing_Abeer_George_Ghuneim/moore.html},
	abstract = {Also known as border following or boundary following; contour tracing is a technique that is applied to digital images in order to extract their boundary. As a result, an important question arises: What is the "boundary" of a given digital image?
In order to answer that question, we first have to define a digital image. A digital image is a group of pixels on a square tessellation each having a certain value. Throughout this web site, we will be dealing with bilevel images i.e. each pixel can have one of 2 possible values namely:
1, in which case we'll consider it a "black" pixel and it will be part of the pattern, {OR}
0, in which case we'll consider it a "white" pixel and it will be part of the background.

Now we come to our original question: What is the "boundary" of a given pattern?
The boundary of a given pattern P, is the set of border pixels of P.
Since we are using a square tessellation, there are 2 kinds of boundary (or border) pixels: 4-border pixels and 8-border pixels.
A black pixel is considered a 4-border pixel if it shares an edge with at least one white pixel. On the other hand, a
black pixel is considered an 8-border pixel if it shares an edge or a vertex with at least one white pixel.
(A 4-border pixel is also an 8-border pixel. An 8-border pixel may or may not be a 4-border pixel.)

A point worth mentioning is that it is not enough to merely identify the boundary pixels of a pattern in order to extract its contour. What we need is an ordered sequence of the boundary pixels from which we can extract the general shape of the pattern.},
	titleaddon = {Contour Tracing},
	author = {Ghuneim, Abeer George},
	urldate = {2021-10-31},
	date = {2000},
	file = {Contour Tracing:C\:\\Users\\matsh\\Zotero\\storage\\XUV6WT74\\moore.html:text/html}
}

@book{wilhelm_burger_digital_nodate,
	location = {London},
	edition = {2},
	title = {Digital Image Processing},
	rights = {Springer-Verlag London 2016},
	isbn = {978-1-4471-6684-9},
	series = {Texts in Computer Science},
	abstract = {This modern, self-contained textbook provides an accessible introduction to the field from the perspective of a practicing programmer, supporting a detailed presentation of the fundamental concepts and techniques with practical exercises and fully worked out implementation examples. This much-anticipated new edition of the definitive textbook on Digital Image Processing has been completely revised and expanded with new content and improved teaching material.},
	pagetotal = {811},
	publisher = {Springer, London},
	author = {{Wilhelm Burger} and {Mark J. Burge}}
}

@inproceedings{shin_efficient_2008,
	location = {Palo Alto, {CA}, {USA}},
	title = {An efficient algorithm for the extraction of contours and curvature scale space on {SIMD}-powered Smart Cameras},
	isbn = {978-1-4244-2664-5},
	url = {http://ieeexplore.ieee.org/document/4635714/},
	doi = {10.1109/ICDSC.2008.4635714},
	abstract = {{SIMD} (Single Instruction Multiple Data) processors have been shown to possess high capability for vector-based image processing due to their massively parallel architecture. However, it is not always easy to map the general-purpose processor implementations of high-level vision algorithms to such processors due to the hardware-imposed characteristics of {SIMD} processors. In this paper, our focus is on contour extraction algorithms for such processors. We present a novel real-time memory-efﬁcient contour extraction algorithm that is suitable for the {SIMD} processor used in the {WiCa} camera developed by {NXP}. A further goal of this paper is to present a method for extracting the curvature scale space ({CSS}) on the same {SIMD} processor. For contour extraction, the detected contour points are ﬁrst stored as they are detected, and then effectively reordered with low memory overhead. For extracting the {CSS}, we introduce a high-precision Gaussian ﬁltering scheme using an extended number representation that is particularly suited for the {SIMD} processor of the camera. We demonstrate both in real time.},
	eventtitle = {2008 Second {ACM}/{IEEE} International Conference on Distributed Smart Cameras ({ICDSC})},
	pages = {1--10},
	booktitle = {2008 Second {ACM}/{IEEE} International Conference on Distributed Smart Cameras},
	publisher = {{IEEE}},
	author = {Shin, Paul J. and Gao, Xinting and Kleihorst, Richard and Park, Johnny and Kak, Avinash C.},
	urldate = {2021-11-01},
	date = {2008-09},
	langid = {english},
	file = {Shin et al. - 2008 - An efficient algorithm for the extraction of conto.pdf:C\:\\Users\\matsh\\Zotero\\storage\\LICXX9HD\\Shin et al. - 2008 - An efficient algorithm for the extraction of conto.pdf:application/pdf}
}